---
  - name: Check existence of TLS certificate
    stat:
      path: /etc/letsencrypt/live/petitions.fyi/fullchain.pem
    register: petitions_certificate

  - name: petitions.fyi web container
    docker_container:
      name: petitions
      image: danpalmer/petitions
      restart: true
      state: started
      pull: true
      restart_policy: on-failure
      restart_retries: 5
      ports:
        - "8003:3000"
      links:
        - postgres
        - redis
      command: petitions
      env:
        APPROOT: "https://petitions.fyi"
        PETITIONS_SESSION_SECRET_KEY: "{{ petitions_env_vars['PETITIONS_SESSION_SECRET_KEY'] }}"
        MAILGUN_DOMAIN: "{{ petitions_env_vars['MAILGUN_DOMAIN'] }}"
        MAILGUN_API_KEY: "{{ petitions_env_vars['MAILGUN_API_KEY'] }}"
        PGUSER: "{{ petitions_env_vars['PGUSER'] }}"
        PGPASS: "{{ petitions_env_vars['PGPASS'] }}"
        PGHOST: postgres
        STATIC_DIR: /static
        REDIS_HOST: redis
      log_driver: journald
    tags:
      - petitions-deploy

  - name: petitions.fyi queues container
    docker_container:
      name: petitions-queues
      image: danpalmer/petitions
      restart: true
      state: started
      pull: true
      restart_policy: on-failure
      restart_retries: 5
      links:
        - postgres
        - redis
      command: petitions-queues
      env:
        PETITIONS_SESSION_SECRET_KEY: "{{ petitions_env_vars['PETITIONS_SESSION_SECRET_KEY'] }}"
        MAILGUN_DOMAIN: "{{ petitions_env_vars['MAILGUN_DOMAIN'] }}"
        MAILGUN_API_KEY: "{{ petitions_env_vars['MAILGUN_API_KEY'] }}"
        PGUSER: "{{ petitions_env_vars['PGUSER'] }}"
        PGPASS: "{{ petitions_env_vars['PGPASS'] }}"
        PGHOST: postgres
        STATIC_DIR: /static
        REDIS_HOST: redis
        QUEUE_THREADS: 10
      log_driver: journald
    tags:
      - petitions-deploy

  - name: petitions.fyi scheduler container
    docker_container:
      name: petitions-scheduler
      image: danpalmer/petitions
      restart: true
      state: started
      pull: true
      restart_policy: on-failure
      restart_retries: 5
      links:
        - postgres
        - redis
      command: petitions-scheduler
      env:
        PETITIONS_SESSION_SECRET_KEY: "{{ petitions_env_vars['PETITIONS_SESSION_SECRET_KEY'] }}"
        MAILGUN_DOMAIN: "{{ petitions_env_vars['MAILGUN_DOMAIN'] }}"
        MAILGUN_API_KEY: "{{ petitions_env_vars['MAILGUN_API_KEY'] }}"
        PGUSER: "{{ petitions_env_vars['PGUSER'] }}"
        PGPASS: "{{ petitions_env_vars['PGPASS'] }}"
        PGHOST: postgres
        STATIC_DIR: /static
        REDIS_HOST: redis
      log_driver: journald
    tags:
      - petitions-deploy

  - name: petitions.fyi nginx configuration
    template:
      src: petitions.fyi.conf
      dest: /etc/nginx/sites-enabled/petitions.fyi
      mode: 0644
    notify:
      - restart nginx
      - add missing tls certs

  - name: www.petitions.fyi nginx configuration
    template:
      src: www.petitions.fyi.conf
      dest: /etc/nginx/sites-enabled/www.petitions.fyi
      mode: 0644
    notify:
      - restart nginx
      - add missing tls certs

  - name: Sidekiq Web Dashboard
    docker_container:
      name: sidekiq-web
      image: clok/standalone-sidekiq-web
      restart: true
      state: started
      pull: true
      restart_policy: on-failure
      restart_retries: 5
      links:
        - redis
      ports:
        - "8004:9292"
      env:
        REDIS_URL: redis://redis:6379/0
        SIDEKIQ_USERNAME: "{{ sidekiq_web_username }}"
        SIDEKIQ_PASSWORD: "{{ sidekiq_web_password }}"

  - name: Check existence of sidekiq.danpalmer.me TLS certificate
    stat:
      path: /etc/letsencrypt/live/sidekiq.danpalmer.me/fullchain.pem
    register: sidekiq_certificate

  - name: sidekiq.danpalmer.me nginx configuration
    template:
      src: sidekiq.danpalmer.me.conf
      dest: /etc/nginx/sites-enabled/sidekiq.danpalmer.me
      mode: 0644
    notify:
      - restart nginx
      - add missing tls certs
