###
# Pulls the code from a remote Git repository, configures the web application,
# creates a virtualenv, and collects static assets
#
---

- name: install known_hosts file to access GitHub
  copy: src=ssh_conf/known_hosts dest={{ssh_dir}}/known_hosts

- name: checkout application if not already existing
  git: repo={{code_repository}} dest={{app_code_dir}} force=yes depth=1
  sudo: yes
  sudo_user: deploy

- name: check if virtualenv already exists
  stat: path={{virtualenv_dir}}
  register: venv_dir

- name: create virtualenv for Django web application
  shell: virtualenv --python=/usr/bin/python3 --no-site-packages {{virtualenv_dir}}
  when: venv_dir.stat.isdir is not defined

- name: install web application dependencies listed in requirements.txt
  pip: requirements={{requirements_file}}
       virtualenv={{virtualenv_dir}}

- name: check if app/static directory exists
  stat: path={{app_code_dir}}/{{staticfiles_dir}}
  register: static_dir

- name: create static directory for Django app if it does not exist
  command: mkdir {{app_code_dir}}/{{staticfiles_dir}}
  when: static_dir.stat.isdir is not defined

- name: Django collectstatic
  django_manage: command=collectstatic
                 app_path={{app_code_dir}}
                 virtualenv={{virtualenv_dir}}
                 settings={{django_settings}}
  environment: django_env_vars

- name: Django migrate
  django_manage: command=migrate
                 app_path={{app_code_dir}}
                 virtualenv={{virtualenv_dir}}
                 settings={{django_settings}}
  environment: django_env_vars

# - name: Django loaddata
#   django_manage: command=loaddata
#                  app_path={{app_code_dir}}
#                  virtualenv={{virtualenv_dir}}
#                  fixtures={{fixtures_file}}
#                  settings={{django_settings}}
#   environment: django_env_vars
